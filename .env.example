# ===========================================
# BANKING SYSTEM - ENVIRONMENT CONFIGURATION
# ===========================================
# Copy this file to .env and fill with your actual values
# Never commit .env to version control!

# ===========================================
# SERVER CONFIGURATION
# ===========================================
PORT=3000
NODE_ENV=development
BASE_URL=http://localhost:3000

# ===========================================
# SMTP EMAIL CONFIGURATION
# ===========================================
# Required for PIN notifications and security alerts
# For Gmail: use App Password, not regular password
# Go to: Google Account → Security → 2-Step Verification → App passwords

SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your-email@gmail.com
SMTP_PASS=your-16-character-gmail-app-password
FROM_EMAIL=your-email@gmail.com
FROM_NAME=Banking System

# Alternative SMTP providers:
# Outlook: smtp-mail.outlook.com:587
# Yahoo: smtp.mail.yahoo.com:587
# SendGrid: smtp.sendgrid.net:587

# ===========================================
# SECURITY CONFIGURATION
# ===========================================
# Customize security thresholds for PIN failures

# Conservative (High Security)
# MAX_PIN_FAILURES_BEFORE_REVOKE=3
# MAX_PIN_FAILURES_BEFORE_ALERT=1

# Balanced (Default - Recommended)
MAX_PIN_FAILURES_BEFORE_REVOKE=5
MAX_PIN_FAILURES_BEFORE_ALERT=2

# Permissive (Development)
# MAX_PIN_FAILURES_BEFORE_REVOKE=10
# MAX_PIN_FAILURES_BEFORE_ALERT=3

# ===========================================
# ENCRYPTION CONFIGURATION
# ===========================================
# Generate a secure random salt (32+ characters)
# Example command: openssl rand -hex 32
# NEVER use the example values below in production!

ENCRYPTION_SALT=replace-with-secure-random-32-character-salt-minimum
ENCRYPTION_ALGORITHM=aes-256-gcm
ENCRYPTION_KEY_LENGTH=32

# ===========================================
# PROCIVIS ONE API CONFIGURATION
# ===========================================
# Optional - system works without Procivis (basic payments only)
# Get credentials from: https://trial.procivis-one.com/

PROCIVIS_CLIENT_SECRET=your-procivis-client-secret-from-dashboard
PROCIVIS_BASE_URL=https://api.trial.procivis-one.com
PROCIVIS_KEYCLOAK_URL=https://keycloak.trial.procivis-one.com
PROCIVIS_CLIENT_ID=one-procivis-po

# Optional redirect URI for credential issuance
# PROCIVIS_REDIRECT_URI=http://localhost:3000/credential-callback

# ===========================================
# PROCIVIS CREDENTIAL SCHEMA CONFIGURATION
# ===========================================
# Required for verifiable credential issuance
# Get these IDs from your Procivis dashboard after setting up schemas

PROCIVIS_CREDENTIAL_SCHEMA_ID=your-credential-schema-uuid-here
PROCIVIS_ISSUER_ID=your-issuer-uuid-here
PROCIVIS_ISSUER_KEY_ID=your-issuer-key-uuid-here
PROCIVIS_PROOF_SCHEMA_ID=your-proof-schema-uuid-here

# ===========================================
# PROCIVIS CLAIM IDs CONFIGURATION
# ===========================================
# Map your credential schema claims to these variables
# These are the field IDs from your Procivis credential schema

PROCIVIS_CLAIM_CARDHOLDER_NAME_ID=your-cardholder-name-claim-uuid
PROCIVIS_CLAIM_LAST4_DIGITS_ID=your-last4-digits-claim-uuid
PROCIVIS_CLAIM_ISSUANCE_DATE_ID=your-issuance-date-claim-uuid
PROCIVIS_CLAIM_EXPIRATION_DATE_ID=your-expiration-date-claim-uuid
PROCIVIS_CLAIM_ECD_ID=your-encrypted-card-data-claim-uuid

# ===========================================
# DATA STORAGE CONFIGURATION
# ===========================================
# File-based storage for prototype
# In production, replace with proper database

DATA_FILE_PATH=./data.json
PAYMENTS_DATA_FILE=./payments.json

# ===========================================
# SETUP INSTRUCTIONS
# ===========================================
# 
# 1. Copy this file: cp .env.example .env
# 2. Fill in your actual values (especially SMTP and ENCRYPTION_SALT)
# 3. For Gmail SMTP:
#    - Enable 2-factor authentication
#    - Generate App Password: accounts.google.com/security
#    - Use App Password as SMTP_PASS (not regular password)
# 4. Generate secure encryption salt:
#    openssl rand -hex 32
# 5. For Procivis integration:
#    - Sign up at trial.procivis-one.com
#    - Create credential schema for banking cards
#    - Copy all the UUIDs to the variables above
# 
# SECURITY NOTES:
# - Never commit .env to version control
# - Use strong, unique passwords
# - Rotate credentials regularly
# - Use environment-specific configurations
# - In production, use proper secrets management (AWS Secrets Manager, etc.)
#